// Какое последнее значение выведет этот код? Почему?


// let i = 3;

// while (i) {
  // alert( i-- );
// }  


let i = 3;

alert(i--); // выведет 3, затем уменьшит i до 2

alert(i--) // выведет 2, затем уменьшит i до 1

alert(i--) // выведет 1, затем уменьшит i до 0


// 2) Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
// Оба цикла выводят alert с одинаковыми значениями или нет?

//  let i = 0;
//  while (++i < 5) alert( i ); // 1 2 3 4 5

// let i = 0;
// while (i++ < 5) alert( i ); // 1 2 3 4 5

// 1. В выражении "++i" сначала происходит увеличение значения переменной "i" на 1, а затем сравнение значения "i" с числом 5. То есть, перед выполнением условия в цикле, значение "i" увеличится сразу же. В результате будет выведено на экран числа 1, 2, 3, 4.

// 2. В выражении "i++" сначала происходит сравнение значения "i" с числом 5, а затем увеличение переменной "i" на 1. То есть, сначала значение "i" будет использовано для выполнения условия в цикле. Затем "i" увеличится. В результате будет выведено на экран числа 1, 2, 3, 4, 5.




// 3) Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
// Оба цикла выведут alert с одинаковыми значениями или нет?
// for (let i = 0; i < 5; i++) alert( i ); // 0 1 2 3 4 

// for (let i = 0; i < 5; ++i) alert( i ); // 0 1 2 3 4

// Между двумя приведенными циклами for нет разницы в результате. Оба цикла будут выводить числа от 0 до 4. 



// 4) При помощи цикла for выведите чётные числа от 2 до 10.
// for (let i = 2; i <= 10; i ++) {
  // console.log(i);
// }

// 5) Перепишите код, заменив цикл for на while, без изменения поведения цикла.

// for (let i = 0; i < 3; i++) {
  // alert( `number ${i}!` );
// }

// let i = 0; 
// while (i < 3) {
  // alert( `number ${i}!` );
  // i++;
// }

// 6) Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.

// Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).

// Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.


let start = 1
let end = 10

for (let i = 2; i < end; i++) {
  let isPrime = true
  for (let j = 2; j < i ; j++ ){
    if (i % j === 0) {
      isPrime = false
      break
    }
  }


console.log (i, isPrime);

}





